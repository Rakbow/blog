<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rakbow.website.dao.MusicMapper">

    <sql id="selectFields">
        id, name, name_en, artists, audio_type, album_id, disc_serial, track_serial, cover_url, files, lrc_text,
        audio_length, description, remark, added_time, edited_time, status
    </sql>

    <sql id="insertFields">
        name, name_en, artists, audio_type, album_id, disc_serial, track_serial, cover_url, files, lrc_text,
        audio_length, description, remark, added_time, edited_time, status
    </sql>

    <select id="getMusic" resultType="Music">
        select
        <include refid="selectFields"></include>
        from music
        where id = #{id}
        <if test="!status">
            and status = 1
        </if>
    </select>

    <select id="getMusics" resultType="Music">
        select
        <include refid="selectFields"></include>
        from music
        <where>
            id in
            <if test="ids != null and ids.size() != 0">
                <foreach item="item" index="index" collection="ids" open="("
                         close=")" separator=",">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>

    <select id="getAll" resultType="Music">
        select
        <include refid="selectFields"></include>
        from music
    </select>

    <select id="getMusicsByAlbumId" resultType="Music">
        select
        <include refid="selectFields"></include>
        from music
        where album_id = #{albumId} and status = 1
    </select>

    <select id="getMusicRows" resultType="int">
        select count(id)
        from music
    </select>

    <insert id="addMusic" parameterType="Music" useGeneratedKeys="true" keyProperty="id">
        <selectKey keyProperty="id" order="AFTER" resultType="int">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into music (<include refid="insertFields"></include>)
        values (#{name}, #{nameEn}, #{artists}, #{audioType}, #{albumId}, #{discSerial}, #{trackSerial}, #{coverUrl},
        #{files}, #{lrcText}, #{audioLength}, #{description}, #{remark}, #{addedTime}, #{editedTime}, #{status})
    </insert>

    <update id="updateMusic" parameterType="Music" keyProperty="id">
        update music
        set
        name = #{music.name}, name_en = #{music.nameEn}, audio_type = #{music.audioType},
        disc_serial = #{music.discSerial}, track_serial = #{music.trackSerial}, audio_length = #{music.audioLength},
        remark = #{music.remark}, added_time = #{music.addedTime}, edited_time = #{music.editedTime}
        where id = #{music.id}
    </update>

    <delete id="deleteMusicById">
        delete
        from music
        where id = #{id}
    </delete>

    <delete id="deleteMusicByAlbumId">
        delete
        from music
        where album_id = #{albumId}
    </delete>

    <update id="updateStatusById" keyProperty="id">
        update music
        set
        status = 0
        where id = #{id}
    </update>

    <update id="updateMusicCoverUrl" keyProperty="id">
        update music
        set
        cover_url = #{coverUrl}
        where album_id = #{albumId}
    </update>

    <update id="updateMusicArtists" keyProperty="id">
        update music
        set
        artists = #{artists}, edited_time = #{editedTime}
        where id = #{id}
    </update>

    <update id="updateMusicLyricsText" keyProperty="id">
        update music
        set
        lrc_text = #{lrcText}, edited_time = #{editedTime}
        where id = #{id}
    </update>

    <update id="updateMusicFiles" keyProperty="id">
        update music
        set
        files = #{files}, edited_time = #{editedTime}
        where id = #{id}
    </update>

</mapper>