<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rakbow.website.dao.AlbumMapper">

    <sql id="selectFields">
        id, catalog_no, name_jp, name_zh, name_en, barcode, release_date, publish_format,
        publish_price, album_format, media_format, label, publisher, distributor, copyright,
        has_bonus, bonus, description, remark, series_id, product_id, artists, images, track_info,
        added_time, edited_time, _s
    </sql>

    <sql id="insertFields">
        catalog_no, name_jp, name_zh, name_en, barcode, release_date, publish_format, publish_price,
        album_format, media_format, label, publisher, distributor, copyright, has_bonus, bonus, description,
        remark, series_id, product_id, artists, images, track_info, added_time, edited_time, _s
    </sql>


    <!--  -->

    <select id="selectAlbumById" resultType="Album">
        select
        <include refid="selectFields"></include>
        from album
        where id = #{id} and _s = 1
    </select>

    <select id="selectAlbumByFilter" resultType="Album">
        select
        <include refid="selectFields"></include>
        from album
        <where>
            <if test="publishFormat != null and publishFormat !=''">
                and publishFormat like concat('%', #{publishFormat}, '%')
            </if>
            <if test="albumFormat != null and albumFormat !=''">
                and albumFormat like concat('%', #{albumFormat}, '%')
            </if>
            <if test="mediaFormat != null and mediaFormat !=''">
                and mediaFormat like concat('%', #{mediaFormat}, '%')
            </if>
            <if test="productId != null and productId !=''">
                and product_id like concat('%', #{productId}, '%')
            </if>
        </where>
        and _s = 1
        order by release_date desc
    </select>

    <select id="getAll" resultType="Album">
        select
        <include refid="selectFields"></include>
        from album
        where _s = 1
        <!--        order by id desc-->
        order by release_date desc
        <!-- limit #{offset}, #{limit} -->
    </select>

    <select id="selectAlbumRows" resultType="int">
        select count(id)
        from album
    </select>

    <insert id="insertAlbum" parameterType="Album" keyProperty="id">
        insert into album (<include refid="insertFields"></include>)
        values (#{catalogNo}, #{nameJp}, #{nameZh}, #{nameEn}, #{barcode}, #{releaseDate}, #{publishFormat},
        #{publishPrice}, #{albumFormat}, #{mediaFormat}, #{label}, #{publisher}, #{distributor}, #{copyright},
        #{hasBonus}, #{bonus}, #{description}, #{remark}, #{seriesId}, #{productId}, #{artists}, #{images},
        #{trackInfo},
        #{addedTime}, #{editedTime}, #{_s})
    </insert>

    <update id="updateAlbum" parameterType="Album" keyProperty="id">
        update album
        set
        catalog_no = #{album.catalogNo}, name_jp = #{album.nameJp}, name_zh = #{album.nameZh}, name_en =
        #{album.nameEn},
        barcode = #{album.barcode}, release_date = #{album.releaseDate}, publish_format = #{album.publishFormat},
        publish_price = #{album.publishPrice}, album_format = #{album.albumFormat}, media_format = #{album.mediaFormat},
        label = #{album.label}, publisher = #{album.publisher}, distributor = #{album.distributor}, copyright =
        #{album.copyright},
        has_bonus = #{album.hasBonus}, bonus = #{album.bonus}, description = #{album.description}, remark =
        #{album.remark},
        series_id = #{album.seriesId}, product_id = #{album.productId}, artists = #{album.artists}, images =
        #{album.images},
        track_info = #{album.trackInfo}, edited_time = #{album.editedTime}, _s = #{album._s}
        where id = #{album.id}
    </update>

    <delete id="deleteAlbumById">
        delete
        from album
        where id = #{id}
    </delete>

    <update id="insertAlbumImages" keyProperty="id">
        update album
        set
        images = #{images}, edited_time = #{editedTime}
        where id = #{id}
    </update>

    <update id="updateAlbumImages" keyProperty="id">
        update album
        set
        images = #{images}, edited_time = #{editedTime}
        where id = #{id}
    </update>

    <update id="updateAlbumArtists" keyProperty="id">
        update album
        set
        artists = #{artists}, edited_time = #{editedTime}
        where id = #{id}
    </update>

    <update id="updateAlbumTrackInfo" keyProperty="id">
        update album
        set
        track_info = #{trackInfo}, edited_time = #{editedTime}
        where id = #{id}
    </update>

    <update id="updateAlbumDescription" keyProperty="id">
        update album
        set
        description = #{description}, edited_time = #{editedTime}
        where id = #{id}
    </update>

    <update id="updateAlbumBonus" keyProperty="id">
        update album
        set
        bonus = #{bonus}, edited_time = #{editedTime}
        where id = #{id}
    </update>

    <select id="selectAlbumByOrderAndLimit" resultType="Album">
        select
        <include refid="selectFields"></include>
        from album
        where _s = 1
        order by #{order}
        limit #{limit}
    </select>

</mapper>